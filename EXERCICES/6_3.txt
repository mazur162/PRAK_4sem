a) class A { 
    static int i; 
    static void f() {
        g(); cout << “f()” << endl; 
    } 
    void g() { 
        if (i >= 0)
            i = -1, f();
        cout << “g ()” << endl;
    }
};

int A::i = 1;
int main () {
    A::i = 1;
    A a; a.f();
    a.i = 0;
    return 0;
}

b) class A { 
    static int i; 
    void f() { 
        if (i >= 0)
            i = -1, g();
        cout << "f()" << endl;
    }
    void g() {
        f(); cout << "g()" << endl; 
    }
};

int A::i = 1; 
int main () {
    A::i = 1;
    const A a; 
    a.f();
    a.i = 0;
    return 0;
}

c) class A { 
    static int i; 
    void f() const {
        if (i < 0) 
            g(i); 
        cout << "f ()" << endl; 
    } 
    void g(int & n) {
        i = n;
        f(); 
        cout << "g ()" << endl;
    }
};

int A::i = 1; 
int main () {
    const A a;
    a.g(2);
    return 0; 
}

6.3. a)

1. Заменить слово class словом struct, либо вставить после открывающей фигурной скобки определения класса слово public:.

2. Cделать метод g () статическим.

60 b)

1. Заменить слово class словом struct, либо вставить после открывающей фигурной скобки определения класса слово public:.

2. В определениях методов f () и g () вставить после пустого списка формальных параметров слово const.